name: CI

on:
  pull_request:
    branches: [ "main" ]   

jobs:
  build-and-test:
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
 
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/ShaliShop.sln') }}
        restore-keys: |
          nuget-${{ runner.os }}-


    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'    
 
    - name: Restore dependencies
      run: dotnet restore ShaliShop.sln
      working-directory: ShaliShop

    - name: Build
      run: dotnet build ShaliShop.sln --no-restore --configuration Release
      working-directory: ShaliShop
 
    - name: Run tests + collect coverage
      run: dotnet test ShaliShop.sln --collect:"XPlat Code Coverage" --configuration Release --verbosity normal
      working-directory: ShaliShop

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Add dotnet tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Generate HTML coverage report
      run: |
        echo "---- found coverage files ----"
        find . -type f -path "*/TestResults/*/coverage.cobertura.xml" -print || true
        echo "---- generating report ----"
        reportgenerator \
          -reports:"**/TestResults/**/coverage.cobertura.xml" \
          -targetdir:coveragereport \
          -reporttypes:"Html;Cobertura"
      working-directory: ShaliShop

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ShaliShop/coveragereport
  
  publish-coverage:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
          
          
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coveragereport

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          publish_dir: coveragereport